//Problem 2 -- Even Fibonacci numbers
//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
//Fibonacci based on index
let rec Fibonacci index =
    if index = 0 then 1
    elif index = 1 then 2
    else Fibonacci (index-1) + Fibonacci (index-2)

let rec GetFibonacciIndexHelper maxValue curIndex =
    if (Fibonacci curIndex) <= maxValue then GetFibonacciIndexHelper maxValue (curIndex+1)
    else (curIndex-1)
    
//Gets the index of the largest Fibonacci Number less than maxValue
let rec GetFibonacciIndex maxValue =
    GetFibonacciIndexHelper maxValue 1

//Gets the sum of all Fibonacci numbers up to (Fibonacci index)
let rec SumFibonacci index =
    if index <= 0 then (Fibonacci index)
    else ((Fibonacci index) + (SumFibonacci (index-1)))

//Gets the sum of all even Fibonacci numbers up to (Fibonacci index)
let rec SumFibonacciEvens index =
    if index <= 0 then 0
    elif (Fibonacci index) % 2 = 0 then ((Fibonacci index) + (SumFibonacciEvens (index-1)))
    else (SumFibonacciEvens (index-1))

let Problem2 max =
    SumFibonacciEvens (GetFibonacciIndex max)

Problem2 4000000;;
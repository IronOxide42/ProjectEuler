/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

long GetTriangleNumber(long index)
{
    long triangle = 0;
    for(int i = 1; i <= index; i++)
    {
        triangle += i;
    }
    return triangle;
}

List<long> GetDivisors(long dividend)
{
    List<long> list = new List<long>();
    list.Add(1);
    for(int i = 2; i < (dividend/2); i++)
    {
        if(dividend % i == 0)
        {
            list.Add(i);
        }
    }
    list.Add(dividend);
    return list;
}

long GetDivisorCount(long dividend)
{
    long count = 2; //divident and 1 always divides
    for(int i = 2; i < (dividend/2); i++)
    {
        if(dividend % i == 0)
        {
            count++;
        }
    }
    return count;
}

long GetFirstTriangleNumberWithOver(long divisorCount)
{
    long candidate = 1;
    long triangle = GetTriangleNumber(candidate);
    while(GetDivisorCount(triangle) < divisorCount)
    {
        candidate++;
        triangle = GetTriangleNumber(candidate);
    }
    return triangle;
}
Console.WriteLine(GetFirstTriangleNumberWithOver(5));